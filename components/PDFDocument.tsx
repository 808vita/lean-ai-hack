// components/PDFDocument.tsx
import React from "react";
import {
  Document,
  Page,
  Text,
  View,
  StyleSheet,
  Font,
} from "@react-pdf/renderer";

interface Skill {
  skillName: string;
  description: string;
  importance: string;
}

interface RoadmapStep {
  name: string;
  description: string;
  resourceLinks: string[];
}

interface PDFDocumentProps {
  jobTitle: string;
  skills: Skill[];
  roadmaps: RoadmapStep[][];
}

// Register font - this is optional. Use if you have custom fonts
// Font.register({
//   family: 'Oswald',
//   src: 'https://fonts.gstatic.com/s/oswald/v13/Y_TKV6o9Vq6DtsggdPKuKevvDin1pK8aKteLpeZ4c0A.ttf'
// });

// Create styles
const styles = StyleSheet.create({
  page: {
    flexDirection: "column",
    backgroundColor: "#ffffff",
    padding: 24,
  },
  section: {
    marginBottom: 12,
  },
  heading: {
    fontSize: 18,
    fontWeight: "bold",
    marginBottom: 8,
  },
  subHeading: {
    fontSize: 14,
    fontWeight: "bold",
    marginTop: 8,
    marginBottom: 4,
  },
  text: {
    fontSize: 12,
    marginBottom: 4,
  },
  link: {
    fontSize: 10,
    color: "blue",
    textDecoration: "underline",
  },
});

const PDFDocument: React.FC<PDFDocumentProps> = ({
  jobTitle,
  skills,
  roadmaps,
}) => {
  return (
    <Document>
      <Page size="A4" style={styles.page}>
        <View style={styles.section}>
          <Text style={styles.heading}>{jobTitle}</Text>
          <Text>Generated by C-KUR</Text>
        </View>

        {skills.map((skill, skillIndex) => (
          <View key={skillIndex} style={styles.section}>
            <Text style={styles.subHeading}>{skill.skillName}</Text>
            <Text style={styles.text}>{skill.description}</Text>
            <Text style={styles.text}>Importance: {skill.importance}</Text>

            {roadmaps[skillIndex] && roadmaps[skillIndex].length > 0 && (
              <View>
                <Text style={styles.subHeading}>Learning Roadmap:</Text>
                {roadmaps[skillIndex].map((step, stepIndex) => (
                  <View key={stepIndex} style={{ marginBottom: 8 }}>
                    <Text style={styles.text}>{step.name}</Text>
                    <Text style={styles.text}>{step.description}</Text>
                    {step.resourceLinks && step.resourceLinks.length > 0 && (
                      <View>
                        {step.resourceLinks.map((link, linkIndex) => (
                          <Text
                            key={linkIndex}
                            style={styles.link}
                            src={link} // Use src to make the text a link
                          >
                            {link}
                          </Text>
                        ))}
                      </View>
                    )}
                  </View>
                ))}
              </View>
            )}
          </View>
        ))}
      </Page>
    </Document>
  );
};

export default PDFDocument;
